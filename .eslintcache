[{"/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/index.js":"1","/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/reportWebVitals.js":"2","/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/App.js":"3","/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/components/CalcButton.js":"4","/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/components/TotalDisplay.js":"5","/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/reducers/index.js":"6","/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/actions/index.js":"7"},{"size":500,"mtime":1612218915517,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1612218915518,"results":"10","hashOfConfig":"9"},{"size":3380,"mtime":1612474704789,"results":"11","hashOfConfig":"9"},{"size":294,"mtime":1612379001633,"results":"12","hashOfConfig":"9"},{"size":424,"mtime":1612474709559,"results":"13","hashOfConfig":"9"},{"size":1461,"mtime":1612379001634,"results":"14","hashOfConfig":"9"},{"size":852,"mtime":1612379001632,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"w0uovj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/index.js",[],["34","35"],"/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/reportWebVitals.js",[],"/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/App.js",["36","37","38"],"import {useReducer} from 'react';\nimport reducer, {initialState} from './reducers';\n\nimport './App.css';\n\nimport TotalDisplay from './components/TotalDisplay';\nimport CalcButton from './components/CalcButton';\n\nimport {applyNumber, changeOperation, clearDisplay, addMemory, clearMemory, recallMemory} from './actions';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleAddOne = (number)=>{\n    dispatch(applyNumber(number));\n  };\n\n  const handleNumberClick = (number)=>{\n    dispatch(applyNumber(number));\n  };\n\n  const handlePlusClick = () => {\n    dispatch(changeOperation(\"+\"));\n  }\n\n  const handleMultiplyClick = () => {\n    dispatch(changeOperation(\"*\"));\n  }\n\n  const handleMinusClick = () => {\n    dispatch(changeOperation(\"-\"));\n  }\n\n  const handleClearClick = () => {\n    dispatch(clearDisplay());\n  }\n\n  const handleAddMemory = () => {\n    dispatch(addMemory());\n  }\n\n  const handleRecallMemory = () => {\n    dispatch(recallMemory());\n  }\n\n  const handleClearMemory = () => {\n    dispatch(clearMemory());\n  }\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\"><img width=\"40px\" src=\"./Lambda-Logo-Red.png\"/> Lambda Reducer Challenge</a>\n      </nav>\n\n      <div className = \"container row mt-5\">\n        <div className=\"col-md-12 d-flex justify-content-center\">\n          <form name=\"Cal\">\n            \n            <TotalDisplay value={state.total}/>\n            <div className=\"row details\">\n              <span id=\"operation\"><b>Operation:</b> <i>{state.operation}</i></span>\n              <span id=\"memory\"><b>Memory:</b> {state.memory}</span>\n            </div>\n            \n            <div className=\"row\">\n              <CalcButton value={\"M+\"} handleClick={handleAddMemory}/>\n              <CalcButton value={\"MR\"} handleClick={handleRecallMemory}/>\n              <CalcButton value={\"MC\"} handleClick={handleClearMemory}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={1} handleClick={()=>{ handleNumberClick(1); }}/>\n              <CalcButton value={2} handleClick={()=>{ handleNumberClick(2); }}/>\n              <CalcButton value={3} handleClick={()=>{ handleNumberClick(3); }}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={4} handleClick={()=>{ handleNumberClick(4); }}/>\n              <CalcButton value={5} handleClick={()=>{ handleNumberClick(5); }}/>\n              <CalcButton value={6} handleClick={()=>{ handleNumberClick(6); }}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={7} handleClick={()=>{ handleNumberClick(7); }}/>\n              <CalcButton value={8} handleClick={()=>{ handleNumberClick(8); }}/>\n              <CalcButton value={9} handleClick={()=>{ handleNumberClick(9); }}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={\"+\"} handleClick={handlePlusClick}/>\n              <CalcButton value={\"*\"} handleClick={handleMultiplyClick}/>\n              <CalcButton value={\"-\"} handleClick={handleMinusClick}/>\n            </div>\n\n            <div className=\"row ce_button\">\n              <CalcButton value={\"CE\"} handleClick={handleClearClick}/>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/components/CalcButton.js",[],"/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/components/TotalDisplay.js",[],"/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/reducers/index.js",["39","40"],"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, CLEAR_DISPLAY, ADD_MEMORY, CLEAR_MEMORY, RECALL_MEMORY } from '../actions';\n\nexport const initialState = {\n    total: 0,\n    operation: \"+\",\n    memory: 0\n}\n\nconst calculateResult = (num1, num2, operation) => {\n    switch(operation) {\n        case(\"+\"):\n            return num1 + num2;\n        case(\"*\"):\n            return num1 * num2;\n        case(\"-\"):\n            return num1 - num2;\n    }\n}\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case(APPLY_NUMBER):\n            return ({ \n                ...state, \n                total: calculateResult(state.total, action.payload, state.operation)\n            });\n\n        case(CHANGE_OPERATION):\n            return ({\n                ...state,\n                operation: action.payload\n            });\n        \n        case(CLEAR_DISPLAY):\n            return ({\n                ...state,\n                total:0\n            });\n        \n        case(ADD_MEMORY):\n            return ({\n                ...state,\n                memory: state.total\n            });\n\n        case(CLEAR_MEMORY):\n            return ({\n                ...state,\n                memory: 0\n            });\n\n        case(RECALL_MEMORY):\n            return ({\n                ...state,\n                total: calculateResult(state.total, state.memory, state.operation)\n            });\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;",["41","42"],"/Users/lambdaschool/Desktop/lambdaSchool/update/unit3/sprint2/1_reducerPattern/module-project/web-module-project-reducer-solution/src/actions/index.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":14,"column":9,"nodeType":"49","messageId":"50","endLine":14,"endColumn":21},{"ruleId":"51","severity":1,"message":"52","line":53,"column":9,"nodeType":"53","endLine":53,"endColumn":46},{"ruleId":"54","severity":1,"message":"55","line":53,"column":46,"nodeType":"53","endLine":53,"endColumn":93},{"ruleId":"47","severity":1,"message":"56","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":10,"column":5,"nodeType":"59","messageId":"60","endLine":17,"endColumn":6},{"ruleId":"43","replacedBy":"61"},{"ruleId":"45","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'handleAddOne' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ADD_ONE' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["63"],["64"],"no-global-assign","no-unsafe-negation"]